
version: 2.1
executors:
  mac_exe:
    macos:
      xcode: "11.4.1"

commands:

  generate-tag-app:
    description: "Send app to Test flight"
    steps:
      - run: bundle exec fastlane beta_testflight

  release-app:
    description: "Send app to Test flight"
    steps:
      - run: bundle exec fastlane beta_testflight

  # deploy_app:
  #   description: "Build the application before tests"
  #   steps:
  #     - run: bundle exec fastlane beta_testflight

  config_workspace:
    description: "Install or Restore configurations"
    steps:
      - restore_cache:
          key: circlev2-{{ checksum "Gemfile.lock" }}
      - run: 
          name: Install Bundle if not exist in cache
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - save_cache:
          key: circlev2-{{ checksum "Gemfile.lock" }}
          paths: 
            - vendor/bundle
      - restore_cache:
          key: build-temp-pods-{{ checksum "Podfile.lock" }}
      - run:
          name: Install Pods
          command: pod install
      - save_cache:
          key: build-temp-pods-{{ checksum "Podfile.lock" }}
          paths: 
            - Pods/

  update_ocean_tokens:
    description: "Update classes and tokens npm file and generate new pod"
    steps:
      - run:
          name: Install SwiftGen
          command: brew install swiftgen
      - run:
          name: Install Pods
          command: sh publish_pod_ocean_tokens.sh     

jobs:

  prepare-release-app:
    macos:
      xcode: 11.4.1 # Specify the Xcode version to use
    steps:
      - checkout
      - generate-tag-app

  release-app:
    macos:
      xcode: 11.4.1 # Specify the Xcode version to use
    steps:
      - checkout
      - config_workspace
      - release_app

  # deploy-app:
  #   macos:
  #     xcode: 11.4.1 # Specify the Xcode version to use
  #   steps:
  #     - checkout
  #     - config_workspace
  #     - deploy_app

  deploy-ocean-tokens:
    macos:
      xcode: 11.4.1 # Specify the Xcode version to use
    steps:
      - checkout
      - update_ocean_tokens

workflows:
  version: 2.1
  commit:
    jobs:
      - deploy-ocean-tokens:
          filters:
            branches:
              only: circleci-project-setup

      # - deploy-app:
      #     filters:
      #       tags:
      #         only: /^OceanComponents-(\d+\.){2}\d+$/
      #       branches:
      #         ignore: /.*/
      - prepare-release-app:
          filters:
            branches:
              only: master

      - release-app:
          filters:
            tags:
              only: /^OceanDS-(\d+\.){2}\d+$/
            branches:
              ignore: /.*/
